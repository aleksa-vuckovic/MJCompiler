INFO  17:01:58,068 - Compiling source file: D:\7\PP1\Projekat\projekat\workspace\MJCompiler\test\code\nested-for.mj
INFO  17:01:58,068 - Output file: D:\7\PP1\Projekat\projekat\workspace\MJCompiler\test\code\nested-for.obj
INFO  17:01:58,110 - Parser je ucitao token:#2 -> program
INFO  17:01:58,110 - Parser je ucitao token:#45 -> MJProgram
INFO  17:01:58,110 - Parser je ucitao token:#20 -> {
INFO  17:01:58,111 - Parser je ucitao token:#6 -> void
INFO  17:01:58,111 - Parser je ucitao token:#45 -> f
INFO  17:01:58,112 - Parser je ucitao token:#18 -> (
INFO  17:01:58,112 - Parser je ucitao token:#45 -> int
INFO  17:01:58,112 - Parser je ucitao token:#45 -> x
INFO  17:01:58,112 - Parser je ucitao token:#25 -> ,
INFO  17:01:58,112 - Parser je ucitao token:#45 -> int
INFO  17:01:58,112 - Parser je ucitao token:#45 -> y
INFO  17:01:58,112 - Parser je ucitao token:#19 -> )
INFO  17:01:58,113 - Parser je ucitao token:#45 -> int
INFO  17:01:58,114 - Parser je ucitao token:#45 -> a
INFO  17:01:58,114 - Parser je ucitao token:#25 -> ,
INFO  17:01:58,115 - Parser je ucitao token:#45 -> b
INFO  17:01:58,115 - Parser je ucitao token:#25 -> ,
INFO  17:01:58,115 - Parser je ucitao token:#45 -> i
INFO  17:01:58,115 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,115 - Parser je ucitao token:#45 -> char
INFO  17:01:58,115 - Parser je ucitao token:#45 -> res
INFO  17:01:58,116 - Parser je ucitao token:#22 -> [
INFO  17:01:58,116 - Parser je ucitao token:#23 -> ]
INFO  17:01:58,116 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,116 - Parser je ucitao token:#20 -> {
INFO  17:01:58,116 - Parser je ucitao token:#45 -> res
INFO  17:01:58,116 - Parser je ucitao token:#41 -> =
INFO  17:01:58,116 - Parser je ucitao token:#14 -> new
INFO  17:01:58,117 - Parser je ucitao token:#45 -> char
INFO  17:01:58,117 - Parser je ucitao token:#22 -> [
INFO  17:01:58,117 - Parser je ucitao token:#44 -> 10
INFO  17:01:58,117 - Parser je ucitao token:#23 -> ]
INFO  17:01:58,117 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,117 - Parser je ucitao token:#45 -> i
INFO  17:01:58,118 - Parser je ucitao token:#41 -> =
INFO  17:01:58,118 - Parser je ucitao token:#44 -> 10
INFO  17:01:58,118 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,118 - Parser je ucitao token:#15 -> if
INFO  17:01:58,118 - Parser je ucitao token:#18 -> (
INFO  17:01:58,118 - Parser je ucitao token:#45 -> x
INFO  17:01:58,118 - Parser je ucitao token:#33 -> ==
INFO  17:01:58,118 - Parser je ucitao token:#44 -> 0
INFO  17:01:58,119 - Parser je ucitao token:#19 -> )
INFO  17:01:58,119 - Parser je ucitao token:#20 -> {
INFO  17:01:58,119 - Parser je ucitao token:#12 -> print
INFO  17:01:58,119 - Parser je ucitao token:#18 -> (
INFO  17:01:58,119 - Parser je ucitao token:#47 -> 48
INFO  17:01:58,119 - Parser je ucitao token:#19 -> )
INFO  17:01:58,119 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,119 - Parser je ucitao token:#21 -> }
INFO  17:01:58,119 - Parser je ucitao token:#16 -> else
INFO  17:01:58,120 - Parser je ucitao token:#20 -> {
INFO  17:01:58,120 - Parser je ucitao token:#17 -> for
INFO  17:01:58,120 - Parser je ucitao token:#18 -> (
INFO  17:01:58,120 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,121 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,121 - Parser je ucitao token:#19 -> )
INFO  17:01:58,122 - Parser je ucitao token:#20 -> {
INFO  17:01:58,122 - Parser je ucitao token:#45 -> a
INFO  17:01:58,122 - Parser je ucitao token:#41 -> =
INFO  17:01:58,122 - Parser je ucitao token:#44 -> 0
INFO  17:01:58,122 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,122 - Parser je ucitao token:#17 -> for
INFO  17:01:58,122 - Parser je ucitao token:#18 -> (
INFO  17:01:58,122 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,122 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,122 - Parser je ucitao token:#19 -> )
INFO  17:01:58,122 - Parser je ucitao token:#20 -> {
INFO  17:01:58,122 - Parser je ucitao token:#15 -> if
INFO  17:01:58,122 - Parser je ucitao token:#18 -> (
INFO  17:01:58,122 - Parser je ucitao token:#45 -> x
INFO  17:01:58,122 - Parser je ucitao token:#32 -> %
INFO  17:01:58,122 - Parser je ucitao token:#45 -> y
INFO  17:01:58,123 - Parser je ucitao token:#34 -> !=
INFO  17:01:58,123 - Parser je ucitao token:#44 -> 0
INFO  17:01:58,124 - Parser je ucitao token:#19 -> )
INFO  17:01:58,124 - Parser je ucitao token:#20 -> {
INFO  17:01:58,124 - Parser je ucitao token:#45 -> a
INFO  17:01:58,124 - Parser je ucitao token:#42 -> ++
INFO  17:01:58,124 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,124 - Parser je ucitao token:#45 -> x
INFO  17:01:58,124 - Parser je ucitao token:#43 -> --
INFO  17:01:58,124 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,124 - Parser je ucitao token:#11 -> continue
INFO  17:01:58,125 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,125 - Parser je ucitao token:#21 -> }
INFO  17:01:58,125 - Parser je ucitao token:#10 -> break
INFO  17:01:58,125 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,125 - Parser je ucitao token:#21 -> }
INFO  17:01:58,125 - Parser je ucitao token:#45 -> i
INFO  17:01:58,125 - Parser je ucitao token:#43 -> --
INFO  17:01:58,125 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,125 - Parser je ucitao token:#45 -> b
INFO  17:01:58,125 - Parser je ucitao token:#41 -> =
INFO  17:01:58,125 - Parser je ucitao token:#45 -> ord
INFO  17:01:58,125 - Parser je ucitao token:#18 -> (
INFO  17:01:58,125 - Parser je ucitao token:#47 -> 48
INFO  17:01:58,126 - Parser je ucitao token:#19 -> )
INFO  17:01:58,127 - Parser je ucitao token:#28 -> +
INFO  17:01:58,127 - Parser je ucitao token:#45 -> a
INFO  17:01:58,129 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,129 - Parser je ucitao token:#15 -> if
INFO  17:01:58,129 - Parser je ucitao token:#18 -> (
INFO  17:01:58,129 - Parser je ucitao token:#45 -> a
INFO  17:01:58,129 - Parser je ucitao token:#35 -> >
INFO  17:01:58,129 - Parser je ucitao token:#44 -> 9
INFO  17:01:58,130 - Parser je ucitao token:#19 -> )
INFO  17:01:58,130 - Parser je ucitao token:#45 -> b
INFO  17:01:58,130 - Parser je ucitao token:#41 -> =
INFO  17:01:58,130 - Parser je ucitao token:#45 -> b
INFO  17:01:58,130 - Parser je ucitao token:#28 -> +
INFO  17:01:58,130 - Parser je ucitao token:#44 -> 7
INFO  17:01:58,130 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,130 - Parser je ucitao token:#45 -> res
INFO  17:01:58,130 - Parser je ucitao token:#22 -> [
INFO  17:01:58,130 - Parser je ucitao token:#45 -> i
INFO  17:01:58,130 - Parser je ucitao token:#23 -> ]
INFO  17:01:58,130 - Parser je ucitao token:#41 -> =
INFO  17:01:58,130 - Parser je ucitao token:#45 -> chr
INFO  17:01:58,130 - Parser je ucitao token:#18 -> (
INFO  17:01:58,130 - Parser je ucitao token:#45 -> b
INFO  17:01:58,130 - Parser je ucitao token:#19 -> )
INFO  17:01:58,131 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,131 - Parser je ucitao token:#45 -> x
INFO  17:01:58,131 - Parser je ucitao token:#41 -> =
INFO  17:01:58,131 - Parser je ucitao token:#45 -> x
INFO  17:01:58,131 - Parser je ucitao token:#31 -> /
INFO  17:01:58,131 - Parser je ucitao token:#45 -> y
INFO  17:01:58,131 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,131 - Parser je ucitao token:#15 -> if
INFO  17:01:58,131 - Parser je ucitao token:#18 -> (
INFO  17:01:58,131 - Parser je ucitao token:#45 -> x
INFO  17:01:58,131 - Parser je ucitao token:#33 -> ==
INFO  17:01:58,132 - Parser je ucitao token:#44 -> 0
INFO  17:01:58,132 - Parser je ucitao token:#19 -> )
INFO  17:01:58,132 - Parser je ucitao token:#10 -> break
INFO  17:01:58,132 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,132 - Parser je ucitao token:#21 -> }
INFO  17:01:58,132 - Parser je ucitao token:#17 -> for
INFO  17:01:58,132 - Parser je ucitao token:#18 -> (
INFO  17:01:58,132 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,132 - Parser je ucitao token:#45 -> i
INFO  17:01:58,132 - Parser je ucitao token:#37 -> <
INFO  17:01:58,132 - Parser je ucitao token:#44 -> 10
INFO  17:01:58,132 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,132 - Parser je ucitao token:#45 -> i
INFO  17:01:58,133 - Parser je ucitao token:#42 -> ++
INFO  17:01:58,133 - Parser je ucitao token:#19 -> )
INFO  17:01:58,133 - Parser je ucitao token:#12 -> print
INFO  17:01:58,133 - Parser je ucitao token:#18 -> (
INFO  17:01:58,133 - Parser je ucitao token:#45 -> res
INFO  17:01:58,133 - Parser je ucitao token:#22 -> [
INFO  17:01:58,133 - Parser je ucitao token:#45 -> i
INFO  17:01:58,133 - Parser je ucitao token:#23 -> ]
INFO  17:01:58,133 - Parser je ucitao token:#19 -> )
INFO  17:01:58,133 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,133 - Parser je ucitao token:#21 -> }
INFO  17:01:58,133 - Parser je ucitao token:#12 -> print
INFO  17:01:58,133 - Parser je ucitao token:#18 -> (
INFO  17:01:58,133 - Parser je ucitao token:#47 -> 10
INFO  17:01:58,133 - Parser je ucitao token:#19 -> )
INFO  17:01:58,133 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,133 - Parser je ucitao token:#9 -> return
INFO  17:01:58,133 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,134 - Parser je ucitao token:#21 -> }
INFO  17:01:58,134 - Parser je ucitao token:#6 -> void
INFO  17:01:58,134 - Parser je ucitao token:#45 -> main
INFO  17:01:58,134 - Parser je ucitao token:#18 -> (
INFO  17:01:58,135 - Parser je ucitao token:#19 -> )
INFO  17:01:58,135 - Parser je ucitao token:#45 -> int
INFO  17:01:58,135 - Parser je ucitao token:#45 -> x
INFO  17:01:58,135 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,135 - Parser je ucitao token:#45 -> int
INFO  17:01:58,135 - Parser je ucitao token:#45 -> y
INFO  17:01:58,135 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,135 - Parser je ucitao token:#20 -> {
INFO  17:01:58,135 - Parser je ucitao token:#45 -> f
INFO  17:01:58,135 - Parser je ucitao token:#18 -> (
INFO  17:01:58,135 - Parser je ucitao token:#44 -> 1234987
INFO  17:01:58,135 - Parser je ucitao token:#25 -> ,
INFO  17:01:58,135 - Parser je ucitao token:#44 -> 10
INFO  17:01:58,135 - Parser je ucitao token:#19 -> )
INFO  17:01:58,136 - Parser je ucitao token:#26 -> ;
INFO  17:01:58,136 - Parser je ucitao token:#21 -> }
INFO  17:01:58,136 - Parser je ucitao token:#21 -> }
INFO  17:01:58,136 - Parser je ucitao token:#0 -> EOF
INFO  17:01:58,136 - Parser je ucitao token:#0 -> EOF
INFO  17:01:58,136 - ===========================================================
INFO  17:01:58,137 - APSTRAKTNO SINTAKSNO STABLO
INFO  17:01:58,139 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  NamespaceListEnd(
  ) [NamespaceListEnd]
  DeclListEnd(
  ) [DeclListEnd]
  MethodListItem(
    MethodListItem(
      MethodListEnd(
      ) [MethodListEnd]
      Method(
        MethodDeclaration(
          MethodNameVoid(
           f
          ) [MethodNameVoid]
          FormalParamCommaItem(
            FormalParamScalar(
              TypeSimple(
               int
              ) [TypeSimple]
             x
            ) [FormalParamScalar]
            FormalParamCommaEnd(
              FormalParamScalar(
                TypeSimple(
                 int
                ) [TypeSimple]
               y
              ) [FormalParamScalar]
            ) [FormalParamCommaEnd]
          ) [FormalParamCommaItem]
        ) [MethodDeclaration]
        VarDeclLineListItem(
          VarDeclLineListItem(
            VarDeclLineListEnd(
            ) [VarDeclLineListEnd]
            VarDeclLine(
              VarDeclLineStart(
                TypeSimple(
                 int
                ) [TypeSimple]
              ) [VarDeclLineStart]
              VarDeclCommaItem(
                VarDeclScalar(
                 a
                ) [VarDeclScalar]
                VarDeclCommaItem(
                  VarDeclScalar(
                   b
                  ) [VarDeclScalar]
                  VarDeclCommaEnd(
                    VarDeclScalar(
                     i
                    ) [VarDeclScalar]
                  ) [VarDeclCommaEnd]
                ) [VarDeclCommaItem]
              ) [VarDeclCommaItem]
            ) [VarDeclLine]
          ) [VarDeclLineListItem]
          VarDeclLine(
            VarDeclLineStart(
              TypeSimple(
               char
              ) [TypeSimple]
            ) [VarDeclLineStart]
            VarDeclCommaEnd(
              VarDeclArray(
               res
              ) [VarDeclArray]
            ) [VarDeclCommaEnd]
          ) [VarDeclLine]
        ) [VarDeclLineListItem]
        StatementListItem(
          StatementListItem(
            StatementListItem(
              StatementListItem(
                StatementListItem(
                  StatementListEnd(
                  ) [StatementListEnd]
                  StatementDesignatorStatement(
                    DesignatorStatementAssign(
                      DesignatorSimple(
                       res
                      ) [DesignatorSimple]
                      Assignop(
                      ) [Assignop]
                      ExprSingle(
                        TermSingle(
                          FactorArray(
                            TypeSimple(
                             char
                            ) [TypeSimple]
                            ExprSingle(
                              TermSingle(
                                FactorNum(
                                 10
                                ) [FactorNum]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [FactorArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [DesignatorStatementAssign]
                  ) [StatementDesignatorStatement]
                ) [StatementListItem]
                StatementDesignatorStatement(
                  DesignatorStatementAssign(
                    DesignatorSimple(
                     i
                    ) [DesignatorSimple]
                    Assignop(
                    ) [Assignop]
                    ExprSingle(
                      TermSingle(
                        FactorNum(
                         10
                        ) [FactorNum]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [DesignatorStatementAssign]
                ) [StatementDesignatorStatement]
              ) [StatementListItem]
              StatementMatchedIf(
                IfConditionOk(
                  ConditionSingle(
                    ConditionTermSingle(
                      ConditionFactorRel(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        RelopEq(
                        ) [RelopEq]
                        ExprSingle(
                          TermSingle(
                            FactorNum(
                             0
                            ) [FactorNum]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ConditionFactorRel]
                    ) [ConditionTermSingle]
                  ) [ConditionSingle]
                ) [IfConditionOk]
                IfStatement(
                  StatementBlock(
                    StatementListItem(
                      StatementListEnd(
                      ) [StatementListEnd]
                      StatementPrint(
                        ExprSingle(
                          TermSingle(
                            FactorChar(
                             48
                            ) [FactorChar]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [StatementPrint]
                    ) [StatementListItem]
                  ) [StatementBlock]
                ) [IfStatement]
                StatementBlock(
                  StatementListItem(
                    StatementListItem(
                      StatementListEnd(
                      ) [StatementListEnd]
                      StatementFor(
                        ForEntry(
                          DesignatorStatementCommaEmpty(
                          ) [DesignatorStatementCommaEmpty]
                        ) [ForEntry]
                        ForConditionEmpty(
                        ) [ForConditionEmpty]
                        ForExit(
                          DesignatorStatementCommaEmpty(
                          ) [DesignatorStatementCommaEmpty]
                        ) [ForExit]
                        StatementBlock(
                          StatementListItem(
                            StatementListItem(
                              StatementListItem(
                                StatementListItem(
                                  StatementListItem(
                                    StatementListItem(
                                      StatementListItem(
                                        StatementListItem(
                                          StatementListEnd(
                                          ) [StatementListEnd]
                                          StatementDesignatorStatement(
                                            DesignatorStatementAssign(
                                              DesignatorSimple(
                                               a
                                              ) [DesignatorSimple]
                                              Assignop(
                                              ) [Assignop]
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNum(
                                                   0
                                                  ) [FactorNum]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [DesignatorStatementAssign]
                                          ) [StatementDesignatorStatement]
                                        ) [StatementListItem]
                                        StatementFor(
                                          ForEntry(
                                            DesignatorStatementCommaEmpty(
                                            ) [DesignatorStatementCommaEmpty]
                                          ) [ForEntry]
                                          ForConditionEmpty(
                                          ) [ForConditionEmpty]
                                          ForExit(
                                            DesignatorStatementCommaEmpty(
                                            ) [DesignatorStatementCommaEmpty]
                                          ) [ForExit]
                                          StatementBlock(
                                            StatementListItem(
                                              StatementListItem(
                                                StatementListEnd(
                                                ) [StatementListEnd]
                                                StatementUnmatchedIf(
                                                  IfConditionOk(
                                                    ConditionSingle(
                                                      ConditionTermSingle(
                                                        ConditionFactorRel(
                                                          ExprSingle(
                                                            TermMul(
                                                              TermSingle(
                                                                FactorDesignator(
                                                                  DesignatorSimple(
                                                                   x
                                                                  ) [DesignatorSimple]
                                                                ) [FactorDesignator]
                                                              ) [TermSingle]
                                                              MulopMod(
                                                              ) [MulopMod]
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 y
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermMul]
                                                          ) [ExprSingle]
                                                          RelopNe(
                                                          ) [RelopNe]
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNum(
                                                               0
                                                              ) [FactorNum]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ConditionFactorRel]
                                                      ) [ConditionTermSingle]
                                                    ) [ConditionSingle]
                                                  ) [IfConditionOk]
                                                  IfStatement(
                                                    StatementBlock(
                                                      StatementListItem(
                                                        StatementListItem(
                                                          StatementListItem(
                                                            StatementListEnd(
                                                            ) [StatementListEnd]
                                                            StatementDesignatorStatement(
                                                              DesignatorStatementInc(
                                                                DesignatorSimple(
                                                                 a
                                                                ) [DesignatorSimple]
                                                              ) [DesignatorStatementInc]
                                                            ) [StatementDesignatorStatement]
                                                          ) [StatementListItem]
                                                          StatementDesignatorStatement(
                                                            DesignatorStatementDec(
                                                              DesignatorSimple(
                                                               x
                                                              ) [DesignatorSimple]
                                                            ) [DesignatorStatementDec]
                                                          ) [StatementDesignatorStatement]
                                                        ) [StatementListItem]
                                                        StatementContinue(
                                                        ) [StatementContinue]
                                                      ) [StatementListItem]
                                                    ) [StatementBlock]
                                                  ) [IfStatement]
                                                ) [StatementUnmatchedIf]
                                              ) [StatementListItem]
                                              StatementBreak(
                                              ) [StatementBreak]
                                            ) [StatementListItem]
                                          ) [StatementBlock]
                                        ) [StatementFor]
                                      ) [StatementListItem]
                                      StatementDesignatorStatement(
                                        DesignatorStatementDec(
                                          DesignatorSimple(
                                           i
                                          ) [DesignatorSimple]
                                        ) [DesignatorStatementDec]
                                      ) [StatementDesignatorStatement]
                                    ) [StatementListItem]
                                    StatementDesignatorStatement(
                                      DesignatorStatementAssign(
                                        DesignatorSimple(
                                         b
                                        ) [DesignatorSimple]
                                        Assignop(
                                        ) [Assignop]
                                        ExprAdd(
                                          ExprSingle(
                                            TermSingle(
                                              FactorMethod(
                                                MethodInvocation(
                                                  DesignatorSimple(
                                                   ord
                                                  ) [DesignatorSimple]
                                                  ActParsEnd(
                                                    ActPar(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorChar(
                                                           48
                                                          ) [FactorChar]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ActPar]
                                                  ) [ActParsEnd]
                                                ) [MethodInvocation]
                                              ) [FactorMethod]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                          AddopAdd(
                                          ) [AddopAdd]
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorSimple(
                                               a
                                              ) [DesignatorSimple]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprAdd]
                                      ) [DesignatorStatementAssign]
                                    ) [StatementDesignatorStatement]
                                  ) [StatementListItem]
                                  StatementUnmatchedIf(
                                    IfConditionOk(
                                      ConditionSingle(
                                        ConditionTermSingle(
                                          ConditionFactorRel(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorSimple(
                                                   a
                                                  ) [DesignatorSimple]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            RelopGt(
                                            ) [RelopGt]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNum(
                                                 9
                                                ) [FactorNum]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ConditionFactorRel]
                                        ) [ConditionTermSingle]
                                      ) [ConditionSingle]
                                    ) [IfConditionOk]
                                    IfStatement(
                                      StatementDesignatorStatement(
                                        DesignatorStatementAssign(
                                          DesignatorSimple(
                                           b
                                          ) [DesignatorSimple]
                                          Assignop(
                                          ) [Assignop]
                                          ExprAdd(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorSimple(
                                                   b
                                                  ) [DesignatorSimple]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                            AddopAdd(
                                            ) [AddopAdd]
                                            TermSingle(
                                              FactorNum(
                                               7
                                              ) [FactorNum]
                                            ) [TermSingle]
                                          ) [ExprAdd]
                                        ) [DesignatorStatementAssign]
                                      ) [StatementDesignatorStatement]
                                    ) [IfStatement]
                                  ) [StatementUnmatchedIf]
                                ) [StatementListItem]
                                StatementDesignatorStatement(
                                  DesignatorStatementAssign(
                                    DesignatorElem(
                                      DesignatorSimple(
                                       res
                                      ) [DesignatorSimple]
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [DesignatorElem]
                                    Assignop(
                                    ) [Assignop]
                                    ExprSingle(
                                      TermSingle(
                                        FactorMethod(
                                          MethodInvocation(
                                            DesignatorSimple(
                                             chr
                                            ) [DesignatorSimple]
                                            ActParsEnd(
                                              ActPar(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       b
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ActPar]
                                            ) [ActParsEnd]
                                          ) [MethodInvocation]
                                        ) [FactorMethod]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [DesignatorStatementAssign]
                                ) [StatementDesignatorStatement]
                              ) [StatementListItem]
                              StatementDesignatorStatement(
                                DesignatorStatementAssign(
                                  DesignatorSimple(
                                   x
                                  ) [DesignatorSimple]
                                  Assignop(
                                  ) [Assignop]
                                  ExprSingle(
                                    TermMul(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           x
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                      MulopDiv(
                                      ) [MulopDiv]
                                      FactorDesignator(
                                        DesignatorSimple(
                                         y
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermMul]
                                  ) [ExprSingle]
                                ) [DesignatorStatementAssign]
                              ) [StatementDesignatorStatement]
                            ) [StatementListItem]
                            StatementUnmatchedIf(
                              IfConditionOk(
                                ConditionSingle(
                                  ConditionTermSingle(
                                    ConditionFactorRel(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             x
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      RelopEq(
                                      ) [RelopEq]
                                      ExprSingle(
                                        TermSingle(
                                          FactorNum(
                                           0
                                          ) [FactorNum]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ConditionFactorRel]
                                  ) [ConditionTermSingle]
                                ) [ConditionSingle]
                              ) [IfConditionOk]
                              IfStatement(
                                StatementBreak(
                                ) [StatementBreak]
                              ) [IfStatement]
                            ) [StatementUnmatchedIf]
                          ) [StatementListItem]
                        ) [StatementBlock]
                      ) [StatementFor]
                    ) [StatementListItem]
                    StatementFor(
                      ForEntry(
                        DesignatorStatementCommaEmpty(
                        ) [DesignatorStatementCommaEmpty]
                      ) [ForEntry]
                      ForConditionNonempty(
                        ConditionFactorRel(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 i
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                          RelopLt(
                          ) [RelopLt]
                          ExprSingle(
                            TermSingle(
                              FactorNum(
                               10
                              ) [FactorNum]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ConditionFactorRel]
                      ) [ForConditionNonempty]
                      ForExit(
                        DesignatorStatementCommaEnd(
                          DesignatorStatementInc(
                            DesignatorSimple(
                             i
                            ) [DesignatorSimple]
                          ) [DesignatorStatementInc]
                        ) [DesignatorStatementCommaEnd]
                      ) [ForExit]
                      StatementPrint(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorElem(
                                DesignatorSimple(
                                 res
                                ) [DesignatorSimple]
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [DesignatorElem]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [StatementPrint]
                    ) [StatementFor]
                  ) [StatementListItem]
                ) [StatementBlock]
              ) [StatementMatchedIf]
            ) [StatementListItem]
            StatementPrint(
              ExprSingle(
                TermSingle(
                  FactorChar(
                   10
                  ) [FactorChar]
                ) [TermSingle]
              ) [ExprSingle]
            ) [StatementPrint]
          ) [StatementListItem]
          StatementReturn(
          ) [StatementReturn]
        ) [StatementListItem]
      ) [Method]
    ) [MethodListItem]
    Method(
      MethodDeclaration(
        MethodNameVoid(
         main
        ) [MethodNameVoid]
        FormalParamCommaEmpty(
        ) [FormalParamCommaEmpty]
      ) [MethodDeclaration]
      VarDeclLineListItem(
        VarDeclLineListItem(
          VarDeclLineListEnd(
          ) [VarDeclLineListEnd]
          VarDeclLine(
            VarDeclLineStart(
              TypeSimple(
               int
              ) [TypeSimple]
            ) [VarDeclLineStart]
            VarDeclCommaEnd(
              VarDeclScalar(
               x
              ) [VarDeclScalar]
            ) [VarDeclCommaEnd]
          ) [VarDeclLine]
        ) [VarDeclLineListItem]
        VarDeclLine(
          VarDeclLineStart(
            TypeSimple(
             int
            ) [TypeSimple]
          ) [VarDeclLineStart]
          VarDeclCommaEnd(
            VarDeclScalar(
             y
            ) [VarDeclScalar]
          ) [VarDeclCommaEnd]
        ) [VarDeclLine]
      ) [VarDeclLineListItem]
      StatementListItem(
        StatementListEnd(
        ) [StatementListEnd]
        StatementDesignatorStatement(
          DesignatorStatementMethod(
            MethodInvocation(
              DesignatorSimple(
               f
              ) [DesignatorSimple]
              ActParsItem(
                ActParsEnd(
                  ActPar(
                    ExprSingle(
                      TermSingle(
                        FactorNum(
                         1234987
                        ) [FactorNum]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ActPar]
                ) [ActParsEnd]
                ActPar(
                  ExprSingle(
                    TermSingle(
                      FactorNum(
                       10
                      ) [FactorNum]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ActPar]
              ) [ActParsItem]
            ) [MethodInvocation]
          ) [DesignatorStatementMethod]
        ) [StatementDesignatorStatement]
      ) [StatementListItem]
    ) [Method]
  ) [MethodListItem]
) [Program]
INFO  17:01:58,140 - ===========================================================
INFO  17:01:58,148 - Trazi se int - Type int: int, -1, -1, 0
INFO  17:01:58,148 - Trazi se int - Type int: int, -1, -1, 0
INFO  17:01:58,148 - Trazi se int - Type int: int, -1, -1, 0
INFO  17:01:58,149 - Trazi se char - Type char: char, -1, -1, 0
INFO  17:01:58,149 - Trazi se res - Var res: Arr of char, 5, 1, 1
INFO  17:01:58,149 - Trazi se char - Type char: char, -1, -1, 0
INFO  17:01:58,149 - Trazi se i - Var i: int, 4, 1, 1
INFO  17:01:58,149 - Trazi se x - Var x: int, 0, 1, 0
INFO  17:01:58,150 - Trazi se a - Var a: int, 2, 1, 1
INFO  17:01:58,150 - Trazi se x - Var x: int, 0, 1, 0
INFO  17:01:58,150 - Trazi se y - Var y: int, 1, 1, 0
INFO  17:01:58,150 - Trazi se a - Var a: int, 2, 1, 1
INFO  17:01:58,150 - Trazi se x - Var x: int, 0, 1, 0
INFO  17:01:58,150 - Trazi se i - Var i: int, 4, 1, 1
INFO  17:01:58,150 - Trazi se b - Var b: int, 3, 1, 1
INFO  17:01:58,150 - Trazi se ord - Meth ord: int, -1, 0, 0
INFO  17:01:58,151 - Trazi se a - Var a: int, 2, 1, 1
INFO  17:01:58,151 - Trazi se a - Var a: int, 2, 1, 1
INFO  17:01:58,151 - Trazi se b - Var b: int, 3, 1, 1
INFO  17:01:58,151 - Trazi se b - Var b: int, 3, 1, 1
INFO  17:01:58,151 - Trazi se res - Var res: Arr of char, 5, 1, 1
INFO  17:01:58,151 - Trazi se i - Var i: int, 4, 1, 1
INFO  17:01:58,151 - Trazi se chr - Meth chr: char, -1, 0, 0
INFO  17:01:58,151 - Trazi se b - Var b: int, 3, 1, 1
INFO  17:01:58,151 - Trazi se x - Var x: int, 0, 1, 0
INFO  17:01:58,151 - Trazi se x - Var x: int, 0, 1, 0
INFO  17:01:58,151 - Trazi se y - Var y: int, 1, 1, 0
INFO  17:01:58,151 - Trazi se x - Var x: int, 0, 1, 0
INFO  17:01:58,151 - Trazi se i - Var i: int, 4, 1, 1
INFO  17:01:58,151 - Trazi se i - Var i: int, 4, 1, 1
INFO  17:01:58,152 - Trazi se res - Var res: Arr of char, 5, 1, 1
INFO  17:01:58,152 - Trazi se i - Var i: int, 4, 1, 1
INFO  17:01:58,152 - Trazi se int - Type int: int, -1, -1, 0
INFO  17:01:58,152 - Trazi se int - Type int: int, -1, -1, 0
INFO  17:01:58,152 - Trazi se f - Meth f: notype, -1, 0, 2
INFO  17:01:58,152 - ===========================================================
INFO  17:01:58,152 - TABELA SIMBOLA
Type int: int, -1, -1, 0

Type char: char, -1, -1, 0

Con eol: char, 10, 0, 0
Con null: Class, 0, 0, 0
Meth chr: char, -1, 0, 0
   Var i: int, 0, 1, 0

Meth ord: int, -1, 0, 0
   Var ch: char, 0, 1, 0

Meth len: int, -1, 0, 0
   Var arr: Arr of notype, 0, 1, 0

Type bool: bool, 0, 0, 0

Prog MJProgram: notype, -1, 0, -1
   Meth f: notype, -1, 0, 2
      Var x: int, 0, 1, 0
      Var y: int, 1, 1, 0
      Var a: int, 2, 1, 1
      Var b: int, 3, 1, 1
      Var i: int, 4, 1, 1
      Var res: Arr of char, 5, 1, 1

   Meth main: notype, -1, 0, 0
      Var x: int, 0, 1, 1
      Var y: int, 1, 1, 1



INFO  17:01:58,152 - ===========================================================
INFO  17:01:58,155 - Objektni fajl je uspesno generisan!
