INFO  03:21:03,786 - Compiling source file: D:\7\PP1\Projekat\projekat\workspace\MJCompiler\test\semantics\semantics2.mj
INFO  03:21:03,786 - Output file: D:\7\PP1\Projekat\projekat\workspace\MJCompiler\test\semantics\semantics2.obj
INFO  03:21:03,822 - Parser je ucitao token:#2 -> program
INFO  03:21:03,822 - Parser je ucitao token:#45 -> MJProgram
INFO  03:21:03,823 - Parser je ucitao token:#4 -> namespace
INFO  03:21:03,824 - Parser je ucitao token:#45 -> data
INFO  03:21:03,824 - Parser je ucitao token:#20 -> {
INFO  03:21:03,825 - Parser je ucitao token:#8 -> const
INFO  03:21:03,825 - Parser je ucitao token:#45 -> int
INFO  03:21:03,827 - Parser je ucitao token:#45 -> max
INFO  03:21:03,828 - Parser je ucitao token:#41 -> =
INFO  03:21:03,828 - Parser je ucitao token:#44 -> 10
INFO  03:21:03,828 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,828 - Parser je ucitao token:#20 -> {
INFO  03:21:03,829 - Parser je ucitao token:#21 -> }
INFO  03:21:03,829 - Parser je ucitao token:#21 -> }
INFO  03:21:03,829 - Parser je ucitao token:#3 -> class
INFO  03:21:03,830 - Parser je ucitao token:#45 -> Test
INFO  03:21:03,830 - Parser je ucitao token:#20 -> {
INFO  03:21:03,830 - Parser je ucitao token:#7 -> static
INFO  03:21:03,831 - Parser je ucitao token:#45 -> int
INFO  03:21:03,831 - Parser je ucitao token:#45 -> max
INFO  03:21:03,831 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,831 - Parser je ucitao token:#21 -> }
INFO  03:21:03,833 - Parser je ucitao token:#20 -> {
INFO  03:21:03,833 - Parser je ucitao token:#45 -> Test
INFO  03:21:03,833 - Parser je ucitao token:#45 -> f
INFO  03:21:03,833 - Parser je ucitao token:#18 -> (
INFO  03:21:03,833 - Parser je ucitao token:#19 -> )
INFO  03:21:03,834 - Parser je ucitao token:#45 -> int
INFO  03:21:03,834 - Parser je ucitao token:#45 -> a
INFO  03:21:03,835 - Parser je ucitao token:#22 -> [
INFO  03:21:03,835 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,835 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,835 - Parser je ucitao token:#45 -> b
INFO  03:21:03,835 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,835 - Parser je ucitao token:#45 -> c
INFO  03:21:03,835 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,835 - Parser je ucitao token:#45 -> d
INFO  03:21:03,835 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,836 - Parser je ucitao token:#45 -> char
INFO  03:21:03,836 - Parser je ucitao token:#45 -> e
INFO  03:21:03,836 - Parser je ucitao token:#22 -> [
INFO  03:21:03,837 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,837 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,837 - Parser je ucitao token:#45 -> f
INFO  03:21:03,837 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,837 - Parser je ucitao token:#45 -> int
INFO  03:21:03,837 - Parser je ucitao token:#45 -> g
INFO  03:21:03,837 - Parser je ucitao token:#22 -> [
INFO  03:21:03,837 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,837 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,837 - Parser je ucitao token:#45 -> Test
INFO  03:21:03,837 - Parser je ucitao token:#45 -> h
INFO  03:21:03,837 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,837 - Parser je ucitao token:#20 -> {
INFO  03:21:03,837 - Parser je ucitao token:#45 -> e
INFO  03:21:03,838 - Parser je ucitao token:#41 -> =
INFO  03:21:03,838 - Parser je ucitao token:#14 -> new
INFO  03:21:03,838 - Parser je ucitao token:#45 -> char
INFO  03:21:03,838 - Parser je ucitao token:#22 -> [
INFO  03:21:03,838 - Parser je ucitao token:#44 -> 10
INFO  03:21:03,839 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,839 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,839 - Parser je ucitao token:#45 -> a
INFO  03:21:03,839 - Parser je ucitao token:#41 -> =
INFO  03:21:03,839 - Parser je ucitao token:#14 -> new
INFO  03:21:03,839 - Parser je ucitao token:#45 -> int
INFO  03:21:03,839 - Parser je ucitao token:#22 -> [
INFO  03:21:03,840 - Parser je ucitao token:#44 -> 10
INFO  03:21:03,840 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,840 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,840 - Parser je ucitao token:#45 -> g
INFO  03:21:03,840 - Parser je ucitao token:#41 -> =
INFO  03:21:03,840 - Parser je ucitao token:#14 -> new
INFO  03:21:03,840 - Parser je ucitao token:#45 -> int
INFO  03:21:03,840 - Parser je ucitao token:#22 -> [
INFO  03:21:03,840 - Parser je ucitao token:#44 -> 10
INFO  03:21:03,840 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,840 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,840 - Parser je ucitao token:#22 -> [
INFO  03:21:03,840 - Parser je ucitao token:#45 -> b
INFO  03:21:03,841 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,841 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,841 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,841 - Parser je ucitao token:#45 -> c
INFO  03:21:03,841 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,841 - Parser je ucitao token:#30 -> *
INFO  03:21:03,841 - Parser je ucitao token:#45 -> e
INFO  03:21:03,841 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,841 - Parser je ucitao token:#41 -> =
INFO  03:21:03,841 - Parser je ucitao token:#45 -> a
INFO  03:21:03,841 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,842 - Parser je ucitao token:#22 -> [
INFO  03:21:03,842 - Parser je ucitao token:#45 -> b
INFO  03:21:03,842 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,842 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,842 - Parser je ucitao token:#30 -> *
INFO  03:21:03,842 - Parser je ucitao token:#45 -> c
INFO  03:21:03,842 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,842 - Parser je ucitao token:#41 -> =
INFO  03:21:03,842 - Parser je ucitao token:#45 -> a
INFO  03:21:03,842 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,842 - Parser je ucitao token:#22 -> [
INFO  03:21:03,842 - Parser je ucitao token:#45 -> f
INFO  03:21:03,842 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,842 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,842 - Parser je ucitao token:#25 -> ,
INFO  03:21:03,842 - Parser je ucitao token:#30 -> *
INFO  03:21:03,842 - Parser je ucitao token:#45 -> g
INFO  03:21:03,842 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,842 - Parser je ucitao token:#41 -> =
INFO  03:21:03,843 - Parser je ucitao token:#45 -> a
INFO  03:21:03,843 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,843 - Parser je ucitao token:#45 -> h
INFO  03:21:03,843 - Parser je ucitao token:#41 -> =
INFO  03:21:03,843 - Parser je ucitao token:#14 -> new
INFO  03:21:03,843 - Parser je ucitao token:#45 -> Test
INFO  03:21:03,843 - Parser je ucitao token:#18 -> (
INFO  03:21:03,844 - Parser je ucitao token:#19 -> )
INFO  03:21:03,845 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,845 - Parser je ucitao token:#12 -> print
INFO  03:21:03,845 - Parser je ucitao token:#18 -> (
INFO  03:21:03,845 - Parser je ucitao token:#45 -> h
INFO  03:21:03,845 - Parser je ucitao token:#19 -> )
INFO  03:21:03,845 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,845 - Parser je ucitao token:#9 -> return
INFO  03:21:03,845 - Parser je ucitao token:#45 -> a
INFO  03:21:03,845 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,845 - Parser je ucitao token:#9 -> return
INFO  03:21:03,845 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,845 - Parser je ucitao token:#15 -> if
INFO  03:21:03,846 - Parser je ucitao token:#18 -> (
INFO  03:21:03,846 - Parser je ucitao token:#45 -> g
INFO  03:21:03,846 - Parser je ucitao token:#33 -> ==
INFO  03:21:03,846 - Parser je ucitao token:#45 -> b
INFO  03:21:03,847 - Parser je ucitao token:#19 -> )
INFO  03:21:03,847 - Parser je ucitao token:#20 -> {
INFO  03:21:03,847 - Parser je ucitao token:#21 -> }
INFO  03:21:03,847 - Parser je ucitao token:#45 -> e
INFO  03:21:03,847 - Parser je ucitao token:#22 -> [
INFO  03:21:03,848 - Parser je ucitao token:#44 -> 0
INFO  03:21:03,848 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,848 - Parser je ucitao token:#41 -> =
INFO  03:21:03,848 - Parser je ucitao token:#45 -> e
INFO  03:21:03,848 - Parser je ucitao token:#22 -> [
INFO  03:21:03,848 - Parser je ucitao token:#44 -> 1
INFO  03:21:03,848 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,848 - Parser je ucitao token:#28 -> +
INFO  03:21:03,848 - Parser je ucitao token:#45 -> e
INFO  03:21:03,849 - Parser je ucitao token:#22 -> [
INFO  03:21:03,849 - Parser je ucitao token:#44 -> 2
INFO  03:21:03,849 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,849 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,849 - Parser je ucitao token:#45 -> a
INFO  03:21:03,849 - Parser je ucitao token:#41 -> =
INFO  03:21:03,849 - Parser je ucitao token:#14 -> new
INFO  03:21:03,849 - Parser je ucitao token:#45 -> char
INFO  03:21:03,849 - Parser je ucitao token:#22 -> [
INFO  03:21:03,849 - Parser je ucitao token:#46 -> 1
INFO  03:21:03,849 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,849 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,850 - Parser je ucitao token:#45 -> g
INFO  03:21:03,850 - Parser je ucitao token:#22 -> [
INFO  03:21:03,850 - Parser je ucitao token:#44 -> 0
INFO  03:21:03,850 - Parser je ucitao token:#23 -> ]
INFO  03:21:03,850 - Parser je ucitao token:#41 -> =
INFO  03:21:03,850 - Parser je ucitao token:#14 -> new
INFO  03:21:03,850 - Parser je ucitao token:#45 -> int
INFO  03:21:03,850 - Parser je ucitao token:#18 -> (
INFO  03:21:03,850 - Parser je ucitao token:#19 -> )
INFO  03:21:03,850 - Parser je ucitao token:#26 -> ;
INFO  03:21:03,850 - Parser je ucitao token:#21 -> }
INFO  03:21:03,850 - Parser je ucitao token:#21 -> }
INFO  03:21:03,851 - Parser je ucitao token:#0 -> EOF
INFO  03:21:03,851 - Parser je ucitao token:#0 -> EOF
INFO  03:21:03,851 - ===========================================================
INFO  03:21:03,851 - APSTRAKTNO SINTAKSNO STABLO
INFO  03:21:03,853 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  NamespaceListItem(
    NamespaceListEnd(
    ) [NamespaceListEnd]
    Namespace(
      NamespaceName(
       data
      ) [NamespaceName]
      DeclListItem(
        DeclListEnd(
        ) [DeclListEnd]
        DeclConst(
          ConstDeclLine(
            ConstDeclLineStart(
              TypeSimple(
               int
              ) [TypeSimple]
            ) [ConstDeclLineStart]
            ConstDeclCommaEnd(
              ConstDeclNum(
               max
               10
              ) [ConstDeclNum]
            ) [ConstDeclCommaEnd]
          ) [ConstDeclLine]
        ) [DeclConst]
      ) [DeclListItem]
      MethodListEnd(
      ) [MethodListEnd]
    ) [Namespace]
  ) [NamespaceListItem]
  DeclListItem(
    DeclListEnd(
    ) [DeclListEnd]
    DeclClass(
      ClassDecl(
        ClassNameNoExtend(
         Test
        ) [ClassNameNoExtend]
        StaticMemberListItem(
          StaticMemberListEnd(
          ) [StaticMemberListEnd]
          StaticMemberVar(
            StaticVarDeclLine(
              StaticVarDeclLineStart(
                TypeSimple(
                 int
                ) [TypeSimple]
              ) [StaticVarDeclLineStart]
              StaticVarDeclCommaEnd(
                StaticVarDeclScalar(
                 max
                ) [StaticVarDeclScalar]
              ) [StaticVarDeclCommaEnd]
            ) [StaticVarDeclLine]
          ) [StaticMemberVar]
        ) [StaticMemberListItem]
        ClassVarDeclOk(
          VarDeclLineListEnd(
          ) [VarDeclLineListEnd]
        ) [ClassVarDeclOk]
        MethodsEmpty(
        ) [MethodsEmpty]
      ) [ClassDecl]
    ) [DeclClass]
  ) [DeclListItem]
  MethodListItem(
    MethodListEnd(
    ) [MethodListEnd]
    Method(
      MethodDeclaration(
        MethodNameRet(
          TypeSimple(
           Test
          ) [TypeSimple]
         f
        ) [MethodNameRet]
        FormalParamCommaEmpty(
        ) [FormalParamCommaEmpty]
      ) [MethodDeclaration]
      VarDeclLineListItem(
        VarDeclLineListItem(
          VarDeclLineListItem(
            VarDeclLineListItem(
              VarDeclLineListEnd(
              ) [VarDeclLineListEnd]
              VarDeclLine(
                VarDeclLineStart(
                  TypeSimple(
                   int
                  ) [TypeSimple]
                ) [VarDeclLineStart]
                VarDeclCommaItem(
                  VarDeclArray(
                   a
                  ) [VarDeclArray]
                  VarDeclCommaItem(
                    VarDeclScalar(
                     b
                    ) [VarDeclScalar]
                    VarDeclCommaItem(
                      VarDeclScalar(
                       c
                      ) [VarDeclScalar]
                      VarDeclCommaEnd(
                        VarDeclScalar(
                         d
                        ) [VarDeclScalar]
                      ) [VarDeclCommaEnd]
                    ) [VarDeclCommaItem]
                  ) [VarDeclCommaItem]
                ) [VarDeclCommaItem]
              ) [VarDeclLine]
            ) [VarDeclLineListItem]
            VarDeclLine(
              VarDeclLineStart(
                TypeSimple(
                 char
                ) [TypeSimple]
              ) [VarDeclLineStart]
              VarDeclCommaItem(
                VarDeclArray(
                 e
                ) [VarDeclArray]
                VarDeclCommaEnd(
                  VarDeclScalar(
                   f
                  ) [VarDeclScalar]
                ) [VarDeclCommaEnd]
              ) [VarDeclCommaItem]
            ) [VarDeclLine]
          ) [VarDeclLineListItem]
          VarDeclLine(
            VarDeclLineStart(
              TypeSimple(
               int
              ) [TypeSimple]
            ) [VarDeclLineStart]
            VarDeclCommaEnd(
              VarDeclArray(
               g
              ) [VarDeclArray]
            ) [VarDeclCommaEnd]
          ) [VarDeclLine]
        ) [VarDeclLineListItem]
        VarDeclLine(
          VarDeclLineStart(
            TypeSimple(
             Test
            ) [TypeSimple]
          ) [VarDeclLineStart]
          VarDeclCommaEnd(
            VarDeclScalar(
             h
            ) [VarDeclScalar]
          ) [VarDeclCommaEnd]
        ) [VarDeclLine]
      ) [VarDeclLineListItem]
      StatementListItem(
        StatementListItem(
          StatementListItem(
            StatementListItem(
              StatementListItem(
                StatementListItem(
                  StatementListItem(
                    StatementListItem(
                      StatementListItem(
                        StatementListItem(
                          StatementListItem(
                            StatementListItem(
                              StatementListItem(
                                StatementListItem(
                                  StatementListEnd(
                                  ) [StatementListEnd]
                                  StatementDesignatorStatement(
                                    DesignatorStatementAssign(
                                      DesignatorSimple(
                                       e
                                      ) [DesignatorSimple]
                                      Assignop(
                                      ) [Assignop]
                                      ExprSingle(
                                        TermSingle(
                                          FactorArray(
                                            TypeSimple(
                                             char
                                            ) [TypeSimple]
                                            ExprSingle(
                                              TermSingle(
                                                FactorNum(
                                                 10
                                                ) [FactorNum]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [FactorArray]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [DesignatorStatementAssign]
                                  ) [StatementDesignatorStatement]
                                ) [StatementListItem]
                                StatementDesignatorStatement(
                                  DesignatorStatementAssign(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                    Assignop(
                                    ) [Assignop]
                                    ExprSingle(
                                      TermSingle(
                                        FactorArray(
                                          TypeSimple(
                                           int
                                          ) [TypeSimple]
                                          ExprSingle(
                                            TermSingle(
                                              FactorNum(
                                               10
                                              ) [FactorNum]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [FactorArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [DesignatorStatementAssign]
                                ) [StatementDesignatorStatement]
                              ) [StatementListItem]
                              StatementDesignatorStatement(
                                DesignatorStatementAssign(
                                  DesignatorSimple(
                                   g
                                  ) [DesignatorSimple]
                                  Assignop(
                                  ) [Assignop]
                                  ExprSingle(
                                    TermSingle(
                                      FactorArray(
                                        TypeSimple(
                                         int
                                        ) [TypeSimple]
                                        ExprSingle(
                                          TermSingle(
                                            FactorNum(
                                             10
                                            ) [FactorNum]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [FactorArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [DesignatorStatementAssign]
                              ) [StatementDesignatorStatement]
                            ) [StatementListItem]
                            StatementDesignatorStatement(
                              DesignatorStatementMultipleAssign(
                                DesignatorCommaItem(
                                  DesignatorCommaEmptyItem(
                                    DesignatorCommaEmptyItem(
                                      DesignatorCommaItem(
                                        DesignatorCommaEnd(
                                        ) [DesignatorCommaEnd]
                                        DesignatorSimple(
                                         b
                                        ) [DesignatorSimple]
                                      ) [DesignatorCommaItem]
                                    ) [DesignatorCommaEmptyItem]
                                  ) [DesignatorCommaEmptyItem]
                                  DesignatorSimple(
                                   c
                                  ) [DesignatorSimple]
                                ) [DesignatorCommaItem]
                                DesignatorSimple(
                                 e
                                ) [DesignatorSimple]
                                DesignatorSimple(
                                 a
                                ) [DesignatorSimple]
                              ) [DesignatorStatementMultipleAssign]
                            ) [StatementDesignatorStatement]
                          ) [StatementListItem]
                          StatementDesignatorStatement(
                            DesignatorStatementMultipleAssign(
                              DesignatorCommaEmptyItem(
                                DesignatorCommaItem(
                                  DesignatorCommaEnd(
                                  ) [DesignatorCommaEnd]
                                  DesignatorSimple(
                                   b
                                  ) [DesignatorSimple]
                                ) [DesignatorCommaItem]
                              ) [DesignatorCommaEmptyItem]
                              DesignatorSimple(
                               c
                              ) [DesignatorSimple]
                              DesignatorSimple(
                               a
                              ) [DesignatorSimple]
                            ) [DesignatorStatementMultipleAssign]
                          ) [StatementDesignatorStatement]
                        ) [StatementListItem]
                        StatementDesignatorStatement(
                          DesignatorStatementMultipleAssign(
                            DesignatorCommaEmptyItem(
                              DesignatorCommaEmptyItem(
                                DesignatorCommaItem(
                                  DesignatorCommaEnd(
                                  ) [DesignatorCommaEnd]
                                  DesignatorSimple(
                                   f
                                  ) [DesignatorSimple]
                                ) [DesignatorCommaItem]
                              ) [DesignatorCommaEmptyItem]
                            ) [DesignatorCommaEmptyItem]
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                            DesignatorSimple(
                             a
                            ) [DesignatorSimple]
                          ) [DesignatorStatementMultipleAssign]
                        ) [StatementDesignatorStatement]
                      ) [StatementListItem]
                      StatementDesignatorStatement(
                        DesignatorStatementAssign(
                          DesignatorSimple(
                           h
                          ) [DesignatorSimple]
                          Assignop(
                          ) [Assignop]
                          ExprSingle(
                            TermSingle(
                              FactorCons(
                                ConstructorInvocation(
                                  TypeSimple(
                                   Test
                                  ) [TypeSimple]
                                ) [ConstructorInvocation]
                                ActParsEmpty(
                                ) [ActParsEmpty]
                              ) [FactorCons]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorStatementAssign]
                      ) [StatementDesignatorStatement]
                    ) [StatementListItem]
                    StatementPrint(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             h
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [StatementPrint]
                  ) [StatementListItem]
                  StatementReturnExpr(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [StatementReturnExpr]
                ) [StatementListItem]
                StatementReturn(
                ) [StatementReturn]
              ) [StatementListItem]
              StatementUnmatchedIf(
                IfConditionOk(
                  ConditionSingle(
                    ConditionTermSingle(
                      ConditionFactorRel(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               g
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        RelopEq(
                        ) [RelopEq]
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               b
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ConditionFactorRel]
                    ) [ConditionTermSingle]
                  ) [ConditionSingle]
                ) [IfConditionOk]
                IfStatement(
                  StatementBlock(
                    StatementListEnd(
                    ) [StatementListEnd]
                  ) [StatementBlock]
                ) [IfStatement]
              ) [StatementUnmatchedIf]
            ) [StatementListItem]
            StatementDesignatorStatement(
              DesignatorStatementAssign(
                DesignatorElem(
                  DesignatorSimple(
                   e
                  ) [DesignatorSimple]
                  ExprSingle(
                    TermSingle(
                      FactorNum(
                       0
                      ) [FactorNum]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [DesignatorElem]
                Assignop(
                ) [Assignop]
                ExprAdd(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorElem(
                          DesignatorSimple(
                           e
                          ) [DesignatorSimple]
                          ExprSingle(
                            TermSingle(
                              FactorNum(
                               1
                              ) [FactorNum]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [DesignatorElem]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopAdd(
                  ) [AddopAdd]
                  TermSingle(
                    FactorDesignator(
                      DesignatorElem(
                        DesignatorSimple(
                         e
                        ) [DesignatorSimple]
                        ExprSingle(
                          TermSingle(
                            FactorNum(
                             2
                            ) [FactorNum]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [DesignatorElem]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAdd]
              ) [DesignatorStatementAssign]
            ) [StatementDesignatorStatement]
          ) [StatementListItem]
          StatementDesignatorStatement(
            DesignatorStatementAssign(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              Assignop(
              ) [Assignop]
              ExprSingle(
                TermSingle(
                  FactorArray(
                    TypeSimple(
                     char
                    ) [TypeSimple]
                    ExprSingle(
                      TermSingle(
                        FactorBool(
                         1
                        ) [FactorBool]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [FactorArray]
                ) [TermSingle]
              ) [ExprSingle]
            ) [DesignatorStatementAssign]
          ) [StatementDesignatorStatement]
        ) [StatementListItem]
        StatementDesignatorStatement(
          DesignatorStatementAssign(
            DesignatorElem(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              ExprSingle(
                TermSingle(
                  FactorNum(
                   0
                  ) [FactorNum]
                ) [TermSingle]
              ) [ExprSingle]
            ) [DesignatorElem]
            Assignop(
            ) [Assignop]
            ExprSingle(
              TermSingle(
                FactorCons(
                  ConstructorInvocation(
                    TypeSimple(
                     int
                    ) [TypeSimple]
                  ) [ConstructorInvocation]
                  ActParsEmpty(
                  ) [ActParsEmpty]
                ) [FactorCons]
              ) [TermSingle]
            ) [ExprSingle]
          ) [DesignatorStatementAssign]
        ) [StatementDesignatorStatement]
      ) [StatementListItem]
    ) [Method]
  ) [MethodListItem]
) [Program]
INFO  03:21:03,853 - ===========================================================
INFO  03:21:03,862 - Trazi se int - Type int: int, -1, -1, 0
INFO  03:21:03,862 - Trazi se int - Type int: int, -1, -1, 0
INFO  03:21:03,862 - Trazi se Test - Type Test: Class, 1, 0, 0
INFO  03:21:03,862 - Trazi se int - Type int: int, -1, -1, 0
INFO  03:21:03,862 - Trazi se char - Type char: char, -1, -1, 0
INFO  03:21:03,862 - Trazi se int - Type int: int, -1, -1, 0
INFO  03:21:03,862 - Trazi se Test - Type Test: Class, 1, 0, 0
INFO  03:21:03,862 - Trazi se e - Var e: Arr of char, 4, 1, 1
INFO  03:21:03,863 - Trazi se char - Type char: char, -1, -1, 0
INFO  03:21:03,863 - Trazi se a - Var a: Arr of int, 0, 1, 1
INFO  03:21:03,863 - Trazi se int - Type int: int, -1, -1, 0
INFO  03:21:03,863 - Trazi se g - Var g: Arr of int, 6, 1, 1
INFO  03:21:03,863 - Trazi se int - Type int: int, -1, -1, 0
INFO  03:21:03,863 - Trazi se b - Var b: int, 1, 1, 1
INFO  03:21:03,863 - Trazi se c - Var c: int, 2, 1, 1
INFO  03:21:03,863 - Trazi se e - Var e: Arr of char, 4, 1, 1
INFO  03:21:03,863 - Trazi se a - Var a: Arr of int, 0, 1, 1
ERROR 03:21:03,863 - Semanticka greska na liniji 2: Tip clana niza sa desne strane mora biti dodeljiv tipu clan niza sa leve strane visestruke dodele.
INFO  03:21:03,864 - Trazi se b - Var b: int, 1, 1, 1
INFO  03:21:03,864 - Trazi se c - Var c: int, 2, 1, 1
INFO  03:21:03,864 - Trazi se a - Var a: Arr of int, 0, 1, 1
ERROR 03:21:03,864 - Semanticka greska na liniji 2: Identifikator posle * u visestrukoj dodeli mora oznacavati niz.
ERROR 03:21:03,864 - Semanticka greska na liniji 2: Tip clana niza sa desne strane mora biti dodeljiv tipu clan niza sa leve strane visestruke dodele.
INFO  03:21:03,864 - Trazi se f - Var f: char, 5, 1, 1
INFO  03:21:03,864 - Trazi se g - Var g: Arr of int, 6, 1, 1
INFO  03:21:03,864 - Trazi se a - Var a: Arr of int, 0, 1, 1
ERROR 03:21:03,864 - Semanticka greska na liniji 2: Tip clana niza sa desne strane mora biti dodeljiv identifikatoru sa leve strane visestruke dodele.
INFO  03:21:03,864 - Trazi se h - Var h: Class, 7, 1, 1
INFO  03:21:03,864 - Trazi se Test - Type Test: Class, 1, 0, 0
INFO  03:21:03,865 - Trazi se h - Var h: Class, 7, 1, 1
ERROR 03:21:03,865 - Semanticka greska na liniji 31: Print naredba kao argument moze da ima samo tipove int, bool ili char.
INFO  03:21:03,865 - Trazi se a - Var a: Arr of int, 0, 1, 1
ERROR 03:21:03,865 - Semanticka greska na liniji 34: Tip izraza u return naredbi ne odgovara povratnom tipu metode.
ERROR 03:21:03,865 - Semanticka greska na liniji 0: Return naredba mora da vrati vrednost koja odgovara povratnom tipu metode.
INFO  03:21:03,865 - Trazi se g - Var g: Arr of int, 6, 1, 1
INFO  03:21:03,866 - Trazi se b - Var b: int, 1, 1, 1
ERROR 03:21:03,866 - Semanticka greska na liniji 41: Tipovi izraza relacionog operatora nisu kompatibilni.
INFO  03:21:03,866 - Trazi se e - Var e: Arr of char, 4, 1, 1
INFO  03:21:03,866 - Trazi se e - Var e: Arr of char, 4, 1, 1
INFO  03:21:03,866 - Trazi se e - Var e: Arr of char, 4, 1, 1
ERROR 03:21:03,866 - Semanticka greska na liniji 44: Aritmeticki operatori se primenljuju samo na tip int.
ERROR 03:21:03,866 - Semanticka greska na liniji 44: Tip izraza nije dodeljiv entitetu sa leve strane dodele.
INFO  03:21:03,866 - Trazi se a - Var a: Arr of int, 0, 1, 1
INFO  03:21:03,867 - Trazi se char - Type char: char, -1, -1, 0
ERROR 03:21:03,867 - Semanticka greska na liniji 47: Velicina niza se zadaje samo int tipom.
ERROR 03:21:03,867 - Semanticka greska na liniji 47: Tip izraza nije dodeljiv entitetu sa leve strane dodele.
INFO  03:21:03,867 - Trazi se g - Var g: Arr of int, 6, 1, 1
INFO  03:21:03,867 - Trazi se int - Type int: int, -1, -1, 0
ERROR 03:21:03,867 - Semanticka greska na liniji 51: Poziv konstruktora je moguc samo za korisnicke tipove.
ERROR 03:21:03,867 - Semanticka greska na liniji 51: Ne postoji konstruktor kome odgovaraju prosledjeni tipovi argumenata!
ERROR 03:21:03,867 - Semanticka greska na liniji 51: Tip izraza nije dodeljiv entitetu sa leve strane dodele.
ERROR 03:21:03,867 - Semanticka greska na liniji 1: Nije pronadjena globalna main metoda bez argumenata!
INFO  03:21:03,867 - ===========================================================
INFO  03:21:03,867 - TABELA SIMBOLA
Type int: int, -1, -1, 0

Type char: char, -1, -1, 0

Con eol: char, 10, 0, 0
Con null: Class, 0, 0, 0
Meth chr: char, -1, 0, 0
   Var i: int, 0, 1, 0

Meth ord: int, -1, 0, 0
   Var ch: char, 0, 1, 0

Meth len: int, -1, 0, 0
   Var arr: Arr of notype, 0, 1, 0

Type bool: bool, 0, 0, 0

Prog MJProgram: notype, -1, 0, -1
   Namespace data: notype, -1, 0, -1
      Con max: int, 10, 0, -1

   Type Test: Class, 1, 0, 0
      Var max: int, 0, 0, -1
      Meth __constructor0: notype, -1, 0, 1
         Var this: Class, 0, 1, 0


   Meth f: Class, -1, 0, 0
      Var a: Arr of int, 0, 1, 1
      Var b: int, 1, 1, 1
      Var c: int, 2, 1, 1
      Var d: int, 3, 1, 1
      Var e: Arr of char, 4, 1, 1
      Var f: char, 5, 1, 1
      Var g: Arr of int, 6, 1, 1
      Var h: Class, 7, 1, 1



INFO  03:21:03,867 - ===========================================================
INFO  03:21:03,867 - Semanticki analizator je detektovao greske. Preskace se generisanje koda
