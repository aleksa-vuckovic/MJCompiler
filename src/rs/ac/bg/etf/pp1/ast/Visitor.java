// generated with ast extension for cup
// version 0.8
// 21/11/2023 0:33:38


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Mulop Mulop);
    public void visit(Relop Relop);
    public void visit(ConstDeclComma ConstDeclComma);
    public void visit(StaticVarDeclComma StaticVarDeclComma);
    public void visit(VarDeclLineList VarDeclLineList);
    public void visit(VarDeclComma VarDeclComma);
    public void visit(StatementList StatementList);
    public void visit(NamespaceList NamespaceList);
    public void visit(ClassName ClassName);
    public void visit(Addop Addop);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ForCondition ForCondition);
    public void visit(Factor Factor);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(MethodName MethodName);
    public void visit(Term Term);
    public void visit(StaticVarDecl StaticVarDecl);
    public void visit(Condition Condition);
    public void visit(FormalParamComma FormalParamComma);
    public void visit(MethodList MethodList);
    public void visit(StaticMemberList StaticMemberList);
    public void visit(Methods Methods);
    public void visit(FormalParam FormalParam);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(StaticMember StaticMember);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(ConstDecl ConstDecl);
    public void visit(ConditionFactor ConditionFactor);
    public void visit(DesignatorStatementComma DesignatorStatementComma);
    public void visit(DesignatorSimple DesignatorSimple);
    public void visit(DesignatorScoped DesignatorScoped);
    public void visit(DesignatorElem DesignatorElem);
    public void visit(DesignatorField DesignatorField);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopSub AddopSub);
    public void visit(AddopAdd AddopAdd);
    public void visit(RelopLe RelopLe);
    public void visit(RelopLt RelopLt);
    public void visit(RelopGe RelopGe);
    public void visit(RelopGt RelopGt);
    public void visit(RelopNe RelopNe);
    public void visit(RelopEq RelopEq);
    public void visit(Assignop Assignop);
    public void visit(TypeScoped TypeScoped);
    public void visit(TypeSimple TypeSimple);
    public void visit(ConstructorInvocation ConstructorInvocation);
    public void visit(FactorCons FactorCons);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorArray FactorArray);
    public void visit(FactorMethod FactorMethod);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(TermSingle TermSingle);
    public void visit(TermMul TermMul);
    public void visit(ExprSingleNeg ExprSingleNeg);
    public void visit(ExprSingle ExprSingle);
    public void visit(ExprAdd ExprAdd);
    public void visit(ConditonFactorExpr ConditonFactorExpr);
    public void visit(ConditionFactorRel ConditionFactorRel);
    public void visit(ConditionTermSingle ConditionTermSingle);
    public void visit(ConditionTermAnd ConditionTermAnd);
    public void visit(ConditionSingle ConditionSingle);
    public void visit(ConditionOr ConditionOr);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementMethod DesignatorStatementMethod);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(DesignatorStatementCommaEmpty DesignatorStatementCommaEmpty);
    public void visit(DesignatorStatementCommaEnd DesignatorStatementCommaEnd);
    public void visit(DesignatorStatementCommaItem DesignatorStatementCommaItem);
    public void visit(ForExit ForExit);
    public void visit(ForConditionEmpty ForConditionEmpty);
    public void visit(ForConditionNonempty ForConditionNonempty);
    public void visit(ForEntry ForEntry);
    public void visit(IfStatement IfStatement);
    public void visit(IfCondition IfCondition);
    public void visit(StatementFor StatementFor);
    public void visit(StatementMatchedIf StatementMatchedIf);
    public void visit(StatementBlock StatementBlock);
    public void visit(StatementPrintNum StatementPrintNum);
    public void visit(StatementPrint StatementPrint);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementDesignatorStatement StatementDesignatorStatement);
    public void visit(StatementUnmatchedIf StatementUnmatchedIf);
    public void visit(StatementListEnd StatementListEnd);
    public void visit(StatementListItem StatementListItem);
    public void visit(ActPar ActPar);
    public void visit(ActParsEmpty ActParsEmpty);
    public void visit(ActParsEnd ActParsEnd);
    public void visit(ActParsItem ActParsItem);
    public void visit(MethodInvocation MethodInvocation);
    public void visit(VarDeclArray VarDeclArray);
    public void visit(VarDeclScalar VarDeclScalar);
    public void visit(VarDeclCommaEnd VarDeclCommaEnd);
    public void visit(VarDeclCommaItem VarDeclCommaItem);
    public void visit(VarDeclLineStart VarDeclLineStart);
    public void visit(VarDeclLine VarDeclLine);
    public void visit(VarDeclLineListEnd VarDeclLineListEnd);
    public void visit(VarDeclLineListItem VarDeclLineListItem);
    public void visit(FormalParamArray FormalParamArray);
    public void visit(FormalParamScalar FormalParamScalar);
    public void visit(FormalParamCommaEmpty FormalParamCommaEmpty);
    public void visit(FormalParamCommaEnd FormalParamCommaEnd);
    public void visit(FormalParamCommaItem FormalParamCommaItem);
    public void visit(MethodNameCons MethodNameCons);
    public void visit(MethodNameVoid MethodNameVoid);
    public void visit(MethodNameRet MethodNameRet);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(Method Method);
    public void visit(MethodListEnd MethodListEnd);
    public void visit(MethodListItem MethodListItem);
    public void visit(StaticInitializerStart StaticInitializerStart);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(StaticVarDeclArray StaticVarDeclArray);
    public void visit(StaticVarDeclScalar StaticVarDeclScalar);
    public void visit(StaticVarDeclCommaEnd StaticVarDeclCommaEnd);
    public void visit(StaticVarDeclCommaItem StaticVarDeclCommaItem);
    public void visit(StaticVarDeclLineStart StaticVarDeclLineStart);
    public void visit(StaticVarDeclLine StaticVarDeclLine);
    public void visit(MethodsEmpty MethodsEmpty);
    public void visit(MethodsNonempty MethodsNonempty);
    public void visit(StaticMemberVar StaticMemberVar);
    public void visit(StaticMemberInitializer StaticMemberInitializer);
    public void visit(StaticMemberListEnd StaticMemberListEnd);
    public void visit(StaticMemberListItem StaticMemberListItem);
    public void visit(ClassNameExtend ClassNameExtend);
    public void visit(ClassNameNoExtend ClassNameNoExtend);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDeclBool ConstDeclBool);
    public void visit(ConstDeclChar ConstDeclChar);
    public void visit(ConstDeclNum ConstDeclNum);
    public void visit(ConstDeclCommaEnd ConstDeclCommaEnd);
    public void visit(ConstDeclCommaItem ConstDeclCommaItem);
    public void visit(ConstDeclLineStart ConstDeclLineStart);
    public void visit(ConstDeclLine ConstDeclLine);
    public void visit(DeclClass DeclClass);
    public void visit(DeclVar DeclVar);
    public void visit(DeclConst DeclConst);
    public void visit(DeclListEnd DeclListEnd);
    public void visit(DeclListItem DeclListItem);
    public void visit(NamespaceName NamespaceName);
    public void visit(Namespace Namespace);
    public void visit(NamespaceListEnd NamespaceListEnd);
    public void visit(NamespaceListItem NamespaceListItem);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
